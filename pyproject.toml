[tool.poetry]
name = "autollm-trader"
version = "0.1.0"
description = "Modular autonomous trading platform with LLM-driven analysis, external risk management, and multi-broker execution."
authors = ["AutoLLM Trader Bot <autollm-trader@example.com>"]
readme = "README.md"
license = "MIT"
packages = [
  { include = "autollm_trader" },
  { include = "apps", from = "." }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.111.0"
uvicorn = {version = "^0.30.0", extras = ["standard"]}
httpx = "^0.27.0"
requests = "^2.31.0"
redis = "^5.0.4"
asyncpg = "^0.29.0"
psycopg[binary,pool] = "^3.1.18"
sqlalchemy = "^2.0.29"
pydantic = "^2.7.1"
pydantic-settings = "^2.3.3"
prometheus-client = "^0.20.0"
python-json-logger = "^2.0.7"
structlog = "^24.1.0"
tenacity = "^8.2.3"
webauthn = "^2.0.1"
pyotp = "^2.9.0"
python-jose = {version = "^3.3.0", extras = ["cryptography"]}
passlib = {version = "^1.7.4", extras = ["bcrypt"]}
aiofiles = "^24.1.0"
rich = "^13.7.1"
loguru = "^0.7.2"
langgraph = "^0.2.4"
langchain = "^0.1.17"
langchain-core = "^0.1.52"
langchain-community = "^0.0.36"
langchain-openai = "^0.1.3"
faiss-cpu = "^1.8.0"
numpy = "^1.26.4"
pandas = "^2.2.2"
duckdb = "^0.10.2"
pyarrow = "^16.0.0"
polars = "^0.20.21"
scipy = "^1.13.0"
yfinance = "^0.2.38"
finnhub-python = "^2.4.19"
ib-insync = "^0.9.86"
ccxt = "^4.2.25"
ccxtpro = "^0.9.208"
trafilatura = "^1.7.0"
beautifulsoup4 = "^4.12.3"
newspaper3k = "^0.2.8"
feedparser = "^6.0.11"
pandas-ta = "^0.3.14b0"
TA-Lib = "^0.4.30"
scikit-learn = "^1.4.2"
textblob = "^0.18.0"
spacy = "^3.7.3"
spacy-lookups-data = "^1.0.5"
nltk = "^3.8.1"
tiktoken = "^0.6.0"
openpyxl = "^3.1.2"
pyyaml = "^6.0.1"
cryptography = "^42.0.7"
PyNaCl = "^1.5.0"
itsdangerous = "^2.2.0"
uvloop = {version = "^0.19.0", markers = "sys_platform != 'win32'"}
watchfiles = "^0.21.0"
apscheduler = "^3.10.4"
arrow = "^1.3.0"
boto3 = "^1.34.90"
minio = "^7.2.10"
aiosmtplib = "^3.0.1"
aiogram = "^3.4.1"
nats-py = "^2.6.0"
fastapi-csrf-protect = "^0.4.4"
httpx-sse = "^0.4.0"
freezegun = "^1.4.0"
respx = "^0.21.1"
pytest-benchmark = "^4.0.0"
typeguard = "^4.1.2"
openapi-schema-pydantic = "^1.2.4"
fastapi-pagination = "^0.12.16"

# Phase 1.1 - Security & Rate Limiting
slowapi = "^0.1.9"
python-multipart = "^0.0.6"

# Phase 1.2 - Observability
prometheus-fastapi-instrumentator = "^6.1.0"

# Phase 1.3 - Market Calendars
pandas-market-calendars = "^4.3.0"

# Phase 2.3 - LLM Embeddings
sentence-transformers = "^2.5.0"
torch = "^2.2.0"
qdrant-client = "^1.7.0"

# Phase 2.4 - Backtesting
vectorbt = "^0.26.0"
quantstats = "^0.0.62"
empyrical = "^0.5.5"

# Phase 3.1 - OpenTelemetry
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
opentelemetry-instrumentation-fastapi = "^0.43b0"
opentelemetry-instrumentation-asyncpg = "^0.43b0"
opentelemetry-instrumentation-redis = "^0.43b0"
opentelemetry-instrumentation-httpx = "^0.43b0"
opentelemetry-exporter-otlp = "^1.22.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.3"
mypy = "^1.10.0"
pytest = "^8.2.0"
pytest-asyncio = "^0.23.6"
pytest-cov = "^5.0.0"
faker = "^25.0.0"
coverage = "^7.5.0"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--showlocals",
    "--cov=autollm_trader",
    "--cov=apps",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=80",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["autollm_trader", "apps"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/migrations/*",
    "*/conftest.py",
]
branch = true
parallel = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E","F","I","N","UP","ANN","B","C4","ICN","PIE","T20","ARG","PL","SIM","RUF"]
ignore = ["ANN101","ANN102"]

[tool.ruff.per-file-ignores]
"tests/**" = ["S101"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
plugins = []
